FROM python:3.10-slim

# Set non-interactive mode for apt
ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies for building packages - completely bypassing GPG verification
RUN apt-get update --allow-insecure-repositories \
  && apt-get install -y --allow-unauthenticated --no-install-recommends \
  build-essential \
  git \
  curl \
  gnupg \
  libgomp1 libatlas-base-dev liblapack-dev \
  sqlite3 \
  libsqlite3-dev \
  python3-dev \
  gettext \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/* /tmp/*

WORKDIR /app

# Build and install pysqlite3 with extension support
RUN pip install --upgrade pip && \
  pip install pybind11 && \
  pip install sqlean

# Copy requirements and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Install additional performance-related packages
RUN pip install --no-cache-dir \
  uvloop \
  httptools \
  gunicorn \
  cachetools \
  huggingface-hub==0.19.4 \
  transformers==4.36.1

# Build sqlite-vec extension from source for the proper architecture
RUN cd /tmp && \
  git clone https://github.com/asg017/sqlite-vec.git && \
  cd sqlite-vec && \
  SQLITE_CFLAGS='-I/usr/include' \
  SQLITE_LIBS='-L/usr/lib -lsqlite3' \
  make loadable && \
  mkdir -p /usr/local/lib/sqlite-vec/ && \
  cp dist/vec0.so /usr/local/lib/sqlite-vec/ && \
  chmod +x /usr/local/lib/sqlite-vec/vec0.so

# Copy application code
COPY . .

# Copy PLaMo-Embedding-1B model into the image
COPY models/plamo-embedding-1b /app/models/plamo-embedding-1b

# Create necessary directories with appropriate permissions
RUN mkdir -p /app/data /app/models /app/vector_store /app/lib/sqlite-vec && \
  chmod -R 755 /app/data /app/models /app/vector_store /app/lib/sqlite-vec && \
  cp /usr/local/lib/sqlite-vec/vec0.so /app/lib/sqlite-vec/vec0.so && \
  chmod +x /app/lib/sqlite-vec/vec0.so

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

# Set Python optimizations
ENV PYTHONOPTIMIZE=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONIOENCODING=UTF-8

# Set environment variables for vector extension
ENV SQLITE_VEC_LIB_PATH=/app/lib/sqlite-vec/vec0.so
ENV FALLBACK_TO_BASIC_SEARCH=true

# Expose ports for MCP server
EXPOSE 8000

# Copy entrypoint script
COPY docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]

# Default command to run when starting the container
CMD ["start-mcp-server"]
