version: "3.8"

volumes:
  qdrant_data:
    driver: local

networks:
  docsearch-net:
    driver: bridge

services:
  mcp-server:
    networks:
      - docsearch-net
    build:
      context: .
      dockerfile: docker/Dockerfile.fixed
    image: cursor-doc-rag-mcp:latest
    container_name: mcp-server
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./vector_store:/app/vector_store
    env_file:
      - .env
    environment:
      - WORKERS=${WORKERS:-4}
      - BATCH_SIZE=${BATCH_SIZE:-16}
      - MAX_BATCH_SIZE=${MAX_BATCH_SIZE:-32}
      - QDRANT_URL=http://qdrant:6334
    command: start-mcp-server
    restart: unless-stopped
    depends_on:
      - qdrant
    deploy:
      resources:
        limits:
          memory: ${MCP_SERVER_MEMORY:-4g}
        reservations:
          memory: 1g

  file-watcher:
    networks:
      - docsearch-net
    build:
      context: .
      dockerfile: docker/Dockerfile.fixed
    image: cursor-doc-rag-mcp:latest
    container_name: file-watcher
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./vector_store:/app/vector_store
    env_file:
      - .env
    command: python scripts/start_file_watcher.py --watch_dirs /app/data
    environment:
      - FALLBACK_TO_BASIC_SEARCH=true
      - QDRANT_URL=http://qdrant:6334
      - VECTOR_STORE_TYPE=qdrant
    restart: unless-stopped
    depends_on:
      - qdrant
      - mcp-server
    deploy:
      resources:
        limits:
          memory: ${FILE_WATCHER_MEMORY:-1g}

  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - docsearch-net
    restart: unless-stopped

  scheduled-vectorization:
    build:
      context: .
      dockerfile: docker/Dockerfile.fixed
    image: cursor-doc-rag-mcp:latest
    container_name: scheduled-vectorization
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./vector_store:/app/vector_store
    env_file:
      - .env
    environment:
      - ENABLE_SCHEDULED_VECTORIZATION=${ENABLE_SCHEDULED_VECTORIZATION:-true}
      - SCHEDULE_INTERVAL=${SCHEDULE_INTERVAL:-3600}
    command: scheduled-vectorization
    restart: unless-stopped
    depends_on:
      - mcp-server
    deploy:
      resources:
        limits:
          memory: ${SCHEDULED_VECTORIZATION_MEMORY:-1g}
